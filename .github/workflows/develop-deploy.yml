name: WEB Develop Deploy

on:
  push:
    branches: dev
    
env:
  REGISTRY_NAME: 844772501268.dkr.ecr.ap-southeast-1.amazonaws.com
  IMAGE_NAME: 844772501268.dkr.ecr.ap-southeast-1.amazonaws.com/vulcan-stt-3:dev

jobs:
  deploy:
    if: "contains(github.event.head_commit.message, 'run-ci')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Build docker image
        run: docker build -f Dockerfile.dev --build-arg environment=dev -t $IMAGE_NAME .
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push the image
        run: docker push $IMAGE_NAME

      - name: Update container on prod server
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DEV_SERVER_HOST }}
          username: vulcan
          key: ${{ secrets.DEV_SERVER_KEY }}
          script: |
            cd /opt/vulcan/scripts/dev
            aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin ${{env.REGISTRY_NAME}}
            docker stop vulcan-stt-3
            docker rm vulcan-stt-3
            docker pull ${{env.IMAGE_NAME}}
            docker image prune -f
            docker run --rm -d --name vulcan-stt-3 -v /datadrive/transcription_3_data:/app/transcription_3_data -p 3005:80 ${{env.IMAGE_NAME}}
